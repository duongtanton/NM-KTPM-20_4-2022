<div class="main-content-inner">
    <div class="breadcrumbs ace-save-state" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-home home-icon"></i>
                <a href="#">Home</a>
            </li>

            <li>
                <a href="#">Employee</a>
            </li>
            <li class="active">Employee Management</li>
        </ul><!-- /.breadcrumb -->

        <div class="nav-search" id="nav-search">
            <form class="form-search">
                <span class="input-icon">
                    <input type="text" placeholder="Search ..." class="nav-search-input" id="nav-search-input"
                        autocomplete="off" />
                    <i class="ace-icon fa fa-search nav-search-icon"></i>
                </span>
            </form>
        </div><!-- /.nav-search -->
    </div>
    <div class="page-content">
        <div class="ace-settings-container" id="ace-settings-container">
            <div class="btn btn-app btn-xs btn-warning ace-settings-btn" id="ace-settings-btn">
                <i class="ace-icon fa fa-cog bigger-130"></i>
            </div>

            <div class="ace-settings-box clearfix" id="ace-settings-box">
                <div class="pull-left width-50">
                    <div class="ace-settings-item">
                        <div class="pull-left">
                            <select id="skin-colorpicker" class="hide">
                                <option data-skin="no-skin" value="#438EB9">#438EB9</option>
                                <option data-skin="skin-1" value="#222A2D">#222A2D</option>
                                <option data-skin="skin-2" value="#C6487E">#C6487E</option>
                                <option data-skin="skin-3" value="#D0D0D0">#D0D0D0</option>
                            </select>
                        </div>
                        <span>&nbsp; Choose Skin</span>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2 ace-save-state" id="ace-settings-navbar"
                            autocomplete="off" />
                        <label class="lbl" for="ace-settings-navbar"> Fixed Navbar</label>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2 ace-save-state" id="ace-settings-sidebar"
                            autocomplete="off" />
                        <label class="lbl" for="ace-settings-sidebar"> Fixed Sidebar</label>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2 ace-save-state" id="ace-settings-breadcrumbs"
                            autocomplete="off" />
                        <label class="lbl" for="ace-settings-breadcrumbs"> Fixed Breadcrumbs</label>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-rtl" autocomplete="off" />
                        <label class="lbl" for="ace-settings-rtl"> Right To Left (rtl)</label>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2 ace-save-state" id="ace-settings-add-container"
                            autocomplete="off" />
                        <label class="lbl" for="ace-settings-add-container">
                            Inside
                            <b>.container</b>
                        </label>
                    </div>
                </div><!-- /.pull-left -->

                <div class="pull-left width-50">
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-hover" autocomplete="off" />
                        <label class="lbl" for="ace-settings-hover"> Submenu on Hover</label>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-compact"
                            autocomplete="off" />
                        <label class="lbl" for="ace-settings-compact"> Compact Sidebar</label>
                    </div>

                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-highlight"
                            autocomplete="off" />
                        <label class="lbl" for="ace-settings-highlight"> Alt. Active Item</label>
                    </div>
                </div><!-- /.pull-left -->
            </div><!-- /.ace-settings-box -->
        </div><!-- /.ace-settings-container -->

        <div class="page-header">
            <h1>
                Employee Management
                <small>
                    <i class="ace-icon fa fa-angle-double-right"></i>
                    Employee management for full control over hotel capacitys
                </small>
            </h1>
        </div><!-- /.page-header -->

        <div class="row">
            <div class="col-xs-12">
                <!-- PAGE CONTENT BEGINS -->
                <div class="row">
                    <div class="col-xs-12">
                        <div class="clearfix">
                            <button class="btn btn-white btn-primary btn-bold bootbox-confirm add">
                                <i class="ace-icon fa fa-plus bigger-120"></i>
                                Add
                            </button>
                            <button class="btn btn-white btn-danger btn-bold bootbox-confirm delete-multiple"
                                style="display: none;">
                                <i class="ace-icon fa fa-trash-o bigger-120 red"></i>
                                Delete
                            </button>
                            <div class="pull-right tableTools-container"></div>
                        </div>
                        <div class="table-header">
                            Employee table
                        </div>

                        <!-- div.table-responsive -->

                        <!-- div.dataTables_borderWrap -->
                        <div>
                            <table id="dynamic-table" class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th class="center">#</th>
                                        <th class="center">
                                            <label class="pos-rel">
                                                <input type="checkbox" class="ace" />
                                                <span class="lbl"></span>
                                            </label>
                                        </th>
                                        <th>Full Name</th>
                                        <th>Avatar</th>
                                        <th>Username</th>
                                        <th>Password</th>
                                        <th>
                                            <i class="ace-icon fa fa-clock-o bigger-110 hidden-480"></i>
                                            Updated At
                                        </th>
                                        <th>
                                            <i class="ace-icon fa fa-clock-o bigger-110 hidden-480"></i>
                                            Created At
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>

                                <tbody>
                                    {{#each employees}}
                                    <tr>
                                        <td class="number-order center">{{twoNumSum @index 1}}</td>
                                        <td class="center">
                                            <label class="pos-rel">
                                                <input type="checkbox" class="ace" data-id="{{this.id}}" />
                                                <span class="lbl"></span>
                                            </label>
                                        </td>
                                        <td>
                                            {{this.fullname}}
                                        </td>
                                        <td style="width: 150px;">
                                            <img src="{{this.avatar}}" alt="{{this.avatar}}" style="width: 100%;">
                                        </td>
                                        <td>
                                            {{this.username}}
                                        </td>
                                        <td>
                                            {{this.password}}
                                        </td>
                                        <td>
                                            {{formatDate this.updatedAt}}
                                        </td>
                                        <td>
                                            {{formatDate this.createdAt}}
                                        </td>
                                        <td>
                                            <div class="hidden-sm hidden-xs action-buttons">
                                                <a class="blue bootbox-confirm view" data-id="{{this.id}}"
                                                    style="cursor: pointer">
                                                    <i class="ace-icon fa fa-search-plus bigger-130"></i>
                                                </a>

                                                <a class="green bootbox-confirm edit" data-id="{{this.id}}"
                                                    style="cursor: pointer">
                                                    <i class="ace-icon fa fa-pencil bigger-130"></i>
                                                </a>

                                                <a class="red bootbox-confirm delete" data-id="{{this.id}}"
                                                    style="cursor: pointer">
                                                    <i class="ace-icon fa fa-trash-o bigger-130"></i>
                                                </a>
                                            </div>

                                            <div class="hidden-md hidden-lg">
                                                <div class="inline pos-rel">
                                                    <button class="btn btn-minier btn-yellow dropdown-toggle"
                                                        data-toggle="dropdown" data-position="auto">
                                                        <i class="ace-icon fa fa-caret-down icon-only bigger-120"></i>
                                                    </button>

                                                    <ul
                                                        class="dropdown-menu dropdown-only-icon dropdown-yellow dropdown-menu-right dropdown-caret dropdown-close">
                                                        <li>
                                                            <a class="tooltip-info tooltip-view bootbox-confirm"
                                                                data-rel="tooltip" title="View" data-id="{{this.id}}"
                                                                style="cursor: pointer">
                                                                <span class="blue">
                                                                    <i
                                                                        class="ace-icon fa fa-search-plus bigger-120"></i>
                                                                </span>
                                                            </a>
                                                        </li>

                                                        <li>
                                                            <a class="tooltip-success tooltip-edit bootbox-confirm"
                                                                data-rel="tooltip" title="Edit" data-id="{{this.id}}"
                                                                style="cursor: pointer">
                                                                <span class="green">
                                                                    <i
                                                                        class="ace-icon fa fa-pencil-square-o bigger-120"></i>
                                                                </span>
                                                            </a>
                                                        </li>

                                                        <li>
                                                            <a class="tooltip-error tooltip-delete bootbox-confirm"
                                                                data-rel="tooltip" title="Delete" data-id="{{this.id}}"
                                                                style="cursor: pointer">
                                                                <span class="red">
                                                                    <i class="ace-icon fa fa-trash-o bigger-120"></i>
                                                                </span>
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- PAGE CONTENT ENDS -->
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.page-content -->
</div>


<script src="/static/public/admin/assets/js/jquery-2.1.4.min.js"></script>

<!-- <![endif]-->

<!--[if IE]>
<script src="/static/public/admin/assets/js/jquery-1.11.3.min.js"></script>
<![endif]-->
<script type="text/javascript">
    if ('ontouchstart' in document.documentElement) document.write("<script src='/static/public/admin/assets/js/jquery.mobile.custom.min.js'>" + "<" + "/script>");
</script>

<!-- page specific plugin scripts -->
<script src="/static/public/admin/assets/js/jquery.dataTables.min.js"></script>
<script src="/static/public/admin/assets/js/jquery.validate.min.js"></script>
<script src="/static/public/admin/assets/js/jquery-additional-methods.min.js"></script>
<script src="/static/public/admin/assets/js/jquery.dataTables.bootstrap.min.js"></script>
<script src="/static/public/admin/assets/js/dataTables.buttons.min.js"></script>
<script src="/static/public/admin/assets/js/buttons.flash.min.js"></script>
<script src="/static/public/admin/assets/js/buttons.html5.min.js"></script>
<script src="/static/public/admin/assets/js/buttons.print.min.js"></script>
<script src="/static/public/admin/assets/js/buttons.colVis.min.js"></script>
<script src="/static/public/admin/assets/js/dataTables.select.min.js"></script>
<script src="/static/public/admin/assets/js/bootbox.js"></script>
<script src="/static/public/admin/assets/js/ace-elements.min.js"></script>
<script src="/static/public/admin/assets/js/autosize.min.js"></script>
<script src="/static/public/admin/assets/js/jquery.inputlimiter.min.js"></script>
<!-- inline scripts related to this page -->
<script type="text/javascript">
    jQuery(function ($) {
        //create & edit form
        const form = (data) => `<form class="form-horizontal form-data" role="form" style="padding: 8px;">
            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-fullname">Full Name:</label>

                <div class="col-sm-9" style="display: flex; flex-direction: column; color: red;">
                    <input type="text" id="form-fullname" name="fullname" placeholder="Enter Full Name"
                        class="col-xs-10 col-sm-5" value='${data ? data.fullname : ''}'>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-username">Username:</label>

                <div class="col-sm-9" style="display: flex; flex-direction: column; color: red;">
                    <input type="text" id="form-username" name="username" placeholder="Enter Username"
                        class="col-xs-10 col-sm-5" value=${data ? data.username : ''}>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-password">Password:</label>

                <div class="col-sm-9" style="display: flex; flex-direction: column; color: red;">
                    <input type="text" id="form-password" name="password" placeholder="Enter Password"
                        class="col-xs-10 col-sm-5" value=${data ? data.password : ''}>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-avatar" style="padding-top: 0">Avatar:</label>
                <div class="col-sm-9" style="display: flex; flex-direction: column; color: red;">
                    <input type="file" id="form-avatar" class="col-xs-10" name="avatar" style="padding: 0; color: initial; outline: none"/>
                </div>
            </div>

            <button type="submit" hidden></button>
        </form>`;

        //view form
        const details = (data) => `
            <form class="form-horizontal" role="form" action="/admin/employees" method="POST">
                <div class="profile-user-info profile-user-info-striped">
                    <div class="profile-info-row">
                        <div class="profile-info-name">ID</div>

                        <div class="profile-info-value">
                            <span>${data.id}</span>
                        </div>
                    </div>

                    <div class="profile-info-row">
                        <div class="profile-info-name">Full Name</div>

                        <div class="profile-info-value">
                            <span>${data.fullname}</span>
                        </div>
                    </div>

                    <div class="profile-info-row">
                        <div class="profile-info-name">Avatar</div>

                        <div class="profile-info-value">
                            <img src="${data.avatar}" alt="" style="width: 150px;">
                        </div>
                    </div>

                    <div class="profile-info-row">
                        <div class="profile-info-name">Password</div>

                        <div class="profile-info-value">
                            <span>${data.password}</span>
                        </div>
                    </div>

                    <div class="profile-info-row">
                        <div class="profile-info-name">Updated At</div>

                        <div class="profile-info-value">
                            <span>${new Date(data.updatedAt).toLocaleString()}</span>
                        </div>
                    </div>
                    <div class="profile-info-row">
                        <div class="profile-info-name">Created At</div>

                        <div class="profile-info-value">
                            <span>${new Date(data.createdAt).toLocaleString()}</span>
                        </div>
                    </div>
                </div>
            </form>`;

        //Client Validation for create & edit form   
        const formValidation = {
            rules: {
                fullname: {
                    required: true,
                },
                username: {
                    required: true,
                },
                password: {
                    required: true,
                },
                avatar: {
                    extension: "jpeg|jpg|png",
                    required: true,
                },
            },
            messages: {
                fullname: {
                    required: "This field is required",
                },
                username: {
                    required: "This field is required",
                },
                password: {
                    required: "This field is required",
                },
                avatar: {
                    extension: "This field only support jpeg,jpg,png files",
                    required: "This field is required",
                },
            },
        }

        //Data Table display employee info
        var myTable =
            $('#dynamic-table')
                //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
                .DataTable({
                    bAutoWidth: false,
                    "aoColumns": [
                        { "bSortable": false },
                        { "bSortable": false },
                        null, null, null, null, null,
                        { "bSortable": false },
                        { "bSortable": false },
                        null, null,
                        { "bSortable": false },
                    ],
                    "aaSorting": [],


                    //"bProcessing": true,
                    //"bServerSide": true,
                    //"sAjaxSource": "http://127.0.0.1/table.php"	,

                    //,
                    //"sScrollY": "200px",
                    //"bPaginate": false,

                    //"sScrollX": "100%",
                    //"sScrollXInner": "120%",
                    //"bScrollCollapse": true,
                    //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
                    //you may want to wrap the table inside a "div.dataTables_borderWrap" element

                    //"iDisplayLength": 50


                    select: {
                        style: 'multi'
                    }
                });



        $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

        new $.fn.dataTable.Buttons(myTable, {
            buttons: [
                {
                    "extend": "colvis",
                    "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                    "className": "btn btn-white btn-primary btn-bold",
                    columns: ':not(:first):not(:last)'
                },
                {
                    "extend": "copy",
                    "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "csv",
                    "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "excel",
                    "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "pdf",
                    "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "print",
                    "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                    "className": "btn btn-white btn-primary btn-bold",
                    autoPrint: false,
                    message: 'This print was produced using the Print button for DataTables'
                }
            ]
        });

        myTable.buttons().container().appendTo($('.tableTools-container'));

        //style the message box
        var defaultCopyAction = myTable.button(1).action();
        myTable.button(1).action(function (e, dt, button, config) {
            defaultCopyAction(e, dt, button, config);
            $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
        });


        var defaultColvisAction = myTable.button(0).action();
        myTable.button(0).action(function (e, dt, button, config) {

            defaultColvisAction(e, dt, button, config);


            if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                $('.dt-button-collection')
                    .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                    .find('a').attr('href', '#').wrap("<li />")
            }
            $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
        });

        setTimeout(function () {
            $($('.tableTools-container')).find('a.dt-button').each(function () {
                var div = $(this).find(' > div').first();
                if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                else jQuery(this).tooltip({ container: 'body', title: $(this).text() });
            });
        }, 500);


        myTable.on('select', function (e, dt, type, index) {
            if (type === 'row') {
                $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
            }
            if ($('tbody input[type="checkbox"]:checked').length > 0) {
                $('.clearfix > .delete-multiple').css('display', 'inline-block');
            } else {
                $('.clearfix > .delete-multiple').css('display', 'none');
            }
        });
        myTable.on('deselect', function (e, dt, type, index) {
            if (type === 'row') {
                $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
            }
            if ($('tbody input[type="checkbox"]:checked').length == 0) {
                $('.clearfix > .delete-multiple').css('display', 'none');
            }
        });

        /////////////////////////////////
        //table checkboxes
        $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

        //select/deselect all rows according to table header checkbox
        $('#dynamic-table > thead > tr > th input[type=checkbox], #dynamic-table_wrapper input[type=checkbox]').eq(0).on('click', function () {
            var th_checked = this.checked;//checkbox inside "TH" table header

            $('#dynamic-table').find('tbody > tr').each(function () {
                var row = this;
                if (th_checked) myTable.row(row).select();
                else myTable.row(row).deselect();
            });
        });

        //select/deselect a row when the checkbox is checked/unchecked
        $('#dynamic-table').on('click', 'td input[type=checkbox]', function () {
            var row = $(this).closest('tr').get(0);
            if (this.checked) myTable.row(row).deselect();
            else myTable.row(row).select();
        });
        $('#dynamic-table').find('td > .label-status').each(function () {
            const status = $(this).text().trim();
            switch (status) {
                case 'available': {
                    $(this).addClass('label label-success arrowed');
                    break;
                }
                case 'occupied': {
                    $(this).addClass('label label-danger arrowed');
                    break;
                }
                case 'cleaning': {
                    $(this).addClass('label label-info arrowed');
                    break;
                }
                case 'maintenance': {
                    $(this).addClass('label label-warning arrowed');
                    break;
                }
                default: {
                    $(this).addClass('label');
                }
            }
        });

        $('#dynamic-table').find('thead th').each(function () {
            $(this).click(function () {
                $('#dynamic-table').find('.number-order').each(function (index) {
                    $(this).text(index + 1);
                })
            });
        })



        $(document).on('click', '#dynamic-table .dropdown-toggle', function (e) {
            e.stopImmediatePropagation();
            e.stopPropagation();
            e.preventDefault();
        });



        //And for the first simple table, which doesn't have TableTools or dataTables
        //select/deselect all rows according to table header checkbox
        var active_class = 'active';

        /********************************/
        //add tooltip for small view action buttons in dropdown menu
        jQuery('[data-rel="tooltip"]').tooltip({ placement: tooltip_placement });

        //tooltip placement on right or left
        function tooltip_placement(context, source) {
            var $source = $(source);
            var $parent = $source.closest('table')
            var off1 = $parent.offset();
            var w1 = $parent.width();

            var off2 = $source.offset();
            //var w2 = $source.width();

            if (parseInt(off2.left) < parseInt(off1.left) + parseInt(w1 / 2)) return 'right';
            return 'left';
        }
        function FileListItems(files) {
            let fileList = new ClipboardEvent("").clipboardData || new DataTransfer()
            for (let i = 0; i < files.length; i++) {
                fileList.items.add(files[i])
            }
            return fileList.files
        }
        async function urlToObject(url) {
            const response = await fetch(url);
            const blob = await response.blob();
            const file = new File([blob], url.substring(url.lastIndexOf('/') + 1), { type: blob.type });
            document.getElementById('form-avatar').files = new FileListItems([file]);
        }

        //Manage popup window
        $(".view.bootbox-confirm").on(ace.click_event, async function (e) {
            const id = e.currentTarget.getAttribute('data-id');
            const res = await fetch(`/admin/employees/${id}`, { method: 'GET' });
            const data = await res.json();

            bootbox.alert({
                message: details(data),
            });
        });
        $(".tooltip-view.bootbox-confirm").on(ace.click_event, async function (e) {
            const id = e.currentTarget.getAttribute('data-id');
            const res = await fetch(`/admin/employees/${id}`, { method: 'GET' });
            const data = await res.json();

            bootbox.alert({
                message: details(data),
            });
        });
        $(".add.bootbox-confirm").on(ace.click_event, async function () {
            const box = bootbox.confirm({
                message: form(),
                buttons:
                {
                    "confirm":
                    {
                        "label": "Create",
                        "className": "btn-sm btn-primary",
                    },
                    "cancel":
                    {
                        "label": "Cancel",
                        "className": "btn-sm",
                    },
                },
                callback: function (result) {
                    if (result) {
                        $('.form-data').validate(formValidation);
                        if ($('.form-data').valid()) {
                            $('.form-data').attr("action", "/admin/employees/create");
                            $('.form-data').attr("method", "POST");
                            $('.form-data').submit();
                        } else {
                            $('.form-data').find(':submit').click();
                            return false;
                        }
                    }
                }
            });
            box.on("shown.bs.modal", function () {
                $('.form-data').validate(formValidation);
                $('.form-data').submit(function (e) {
                    e.preventDefault();
                    const avatar = document.getElementById("form-avatar").files[0];
                    const formData = new FormData()
                    formData.append("fullname", document.getElementById('form-fullname').value);
                    formData.append("username", document.getElementById('form-username').value);
                    formData.append("password", document.getElementById('form-password').value);
                    formData.append("avatar", avatar);
                    fetch(`/admin/employees/create`, {
                        method: 'POST',
                        body: formData
                    })
                        .then((res) => { location.reload(); })
                        .catch((err) => { console.log(err); })
                });
                $('#form-avatar').ace_file_input({
                    style: 'well',
                    btn_choose: 'Drop files here or click to choose',
                    btn_change: null,
                    no_icon: 'ace-icon fa fa-cloud-upload',
                    droppable: true,
                    thumbnail: 'small'//large | fit
                    //,icon_remove:null//set null, to hide remove/reset button
                    /**,before_change:function(files, dropped) {
                        //Check an example below
                        //or examples/file-upload.html
                        return true;
                    }*/
                    /**,before_remove : function() {
                        return true;
                    }*/
                    ,
                    preview_error: function (filename, error_code) {
                        //name of the file that failed
                        //error_code values
                        //1 = 'FILE_LOAD_FAILED',
                        //2 = 'IMAGE_LOAD_FAILED',
                        //3 = 'THUMBNAIL_FAILED'
                        //alert(error_code);
                    }

                }).on('change', function () {
                    //console.log($(this).data('ace_input_files'));
                    //console.log($(this).data('ace_input_method'));
                });

                autosize($('textarea[class*=autosize]'));
                $('textarea.limited').inputlimiter({
                    remText: '%n character%s remaining...',
                    limitText: 'max allowed : %n.'
                });
            });
        });
        $(".edit.bootbox-confirm").on(ace.click_event, async function (e) {
            const id = e.currentTarget.getAttribute('data-id');
            const res = await fetch(`/admin/employees/${id}`, { method: 'GET' });
            const data = await res.json();
            const box = bootbox.confirm({
                message: form(data),
                buttons:
                {
                    "confirm":
                    {
                        "label": "Save",
                        "className": "btn-sm btn-primary",
                    },
                    "cancel":
                    {
                        "label": "Cancel",
                        "className": "btn-sm",
                    }
                },
                callback: function (result) {
                    if (result) {
                        if ($('.form-data').valid()) {
                            $('.form-data').submit();
                        } else {
                            return false;
                        }
                    }
                }
            });
            box.on("shown.bs.modal", function () {
                var changeImage = false;
                urlToObject(data.avatar);
                $('.form-data').validate(formValidation);
                $('.form-data').submit(function (e) {
                    e.preventDefault();
                    const fullname = document.getElementById('form-fullname').value;
                    const username = document.getElementById('form-username').value;
                    const password = document.getElementById('form-password').value;
                    const file = document.getElementById("form-avatar").files[0];

                    const formData = new FormData()
                    data.fullname !== fullname && formData.append("fullname", fullname);
                    data.username !== username && formData.append("username", username);
                    data.password != password && formData.append("password", password);
                    changeImage === true && formData.append("avatar", file);
                    fetch(`/admin/employees/${id}/edit`, {
                        method: 'POST',
                        body: formData
                    })
                        .then((res) => { location.reload(); })
                        .catch((err) => { console.log(err); })
                });
                $('#form-avatar').change(() => {
                    changeImage = true;
                })
                autosize($('textarea[class*=autosize]'));
                $('textarea.limited').inputlimiter({
                    remText: '%n character%s remaining...',
                    limitText: 'max allowed : %n.'
                });
            });
        });
        $(".tooltip-edit.bootbox-confirm").on(ace.click_event, async function (e) {
            const id = e.currentTarget.getAttribute('data-id');
            const res = await fetch(`/admin/employees/${id}`, { method: 'GET' });
            const data = await res.json();

            const box = bootbox.confirm({
                message: form(data),
                buttons:
                {
                    "confirm":
                    {
                        "label": "Save",
                        "className": "btn-sm btn-primary",
                    },
                    "cancel":
                    {
                        "label": "Cancel",
                        "className": "btn-sm",
                    }
                },
                callback: function (result) {
                    if (result) {
                        if ($('.form-data').valid()) {
                            $('.form-data').submit();
                        } else {
                            return false;
                        }
                    }
                }
            });
            box.on("shown.bs.modal", function () {
                var changeImage = false;
                urlToObject(data.avatar);
                $('.form-data').validate(formValidation);
                $('.form-data').submit(function (e) {
                    e.preventDefault();
                    const fullname = document.getElementById('form-fullname').value;
                    const username = document.getElementById('form-username').value;
                    const password document.getElementById('form-password').value;
                    const file = document.getElementById("form-avatar").files[0];

                    const formData = new FormData()
                    data.fullname !== fullname && formData.append("fullname", fullname);
                    data.username !== username && formData.append("username", username);
                    data.password !== password && formData.append("password", password);
                    changeImage === true && formData.append("avatar", file);
                    fetch(`/admin/employees/${id}/edit`, {
                        method: 'POST',
                        body: formData
                    })
                        .then((res) => { location.reload(); })
                        .catch((err) => { console.log(err); })
                });
                $('#form-avatar').change(() => {
                    changeImage = true;
                })
                autosize($('textarea[class*=autosize]'));
                $('textarea.limited').inputlimiter({
                    remText: '%n character%s remaining...',
                    limitText: 'max allowed : %n.'
                });
            });
        });
        $(".delete.bootbox-confirm").on(ace.click_event, function (e) {
            const id = e.currentTarget.getAttribute('data-id');
            bootbox.confirm({
                message: `<span>Are you sure want to delete the employee with ID ${id}?</span>`,
                buttons:
                {
                    "confirm":
                    {
                        "label": "Delete",
                        "className": "btn-sm btn-danger",
                    },
                    "cancel":
                    {
                        "label": "Cancel",
                        "className": "btn-sm",
                    }
                },
                callback: function (result) {
                    if (result) {
                        fetch(`/admin/employees/${id}`, {
                            method: 'DELETE',
                        })
                            .then((res) => { location.reload(); })
                            .catch((err) => { console.log(err); })
                    }
                }
            });
        });
        $(".tooltip-delete.bootbox-confirm").on(ace.click_event, function (e) {
            const id = e.currentTarget.getAttribute('data-id');
            bootbox.confirm({
                message: `<span>Are you sure want to delete the employee with ID ${id}?</span>`,
                buttons:
                {
                    "confirm":
                    {
                        "label": "Delete",
                        "className": "btn-sm btn-danger",
                    },
                    "cancel":
                    {
                        "label": "Cancel",
                        "className": "btn-sm",
                    }
                },
                callback: function (result) {
                    if (result) {
                        fetch(`/admin/employees/${id}`, {
                            method: 'DELETE',
                        })
                            .then((res) => { location.reload(); })
                            .catch((err) => { console.log(err); })
                    }
                }
            });
        });
        $(".delete-multiple.bootbox-confirm").on(ace.click_event, function () {
            bootbox.confirm({
                message: `Are you sure want to delete these employees?`,
                buttons:
                {
                    "confirm":
                    {
                        "label": "Delete",
                        "className": "btn-sm btn-danger",
                    },
                    "cancel":
                    {
                        "label": "Cancel",
                        "className": "btn-sm",
                    }
                },
                callback: function (result) {
                    if (result) {
                        let idList = [];
                        $('tbody').find('input[type="checkbox"]:checked').each(function () {
                            idList.push($(this).attr('data-id'));
                        })
                        fetch(`/admin/employees`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                idList,
                            }),
                        })
                            .then((res) => { location.reload(); })
                            .catch((err) => { console.log(err); })
                    }
                }
            });
        });
    });
</script>